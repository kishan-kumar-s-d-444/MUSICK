{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshnk\\\\KISHAN KUMAR\\\\1KK_r\\\\frontend\\\\src\\\\components\\\\LanguagePage.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguagePage = () => {\n  _s();\n  const {\n    lang\n  } = useParams();\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [audioElement, setAudioElement] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/songs?lang=${lang}`).then(response => {\n      setSongs(response.data);\n      if (response.data.length > 0) {\n        setCurrentSong(response.data[0]);\n        const newAudio = new Audio(`http://localhost:5000/public/${response.data[0].path}`);\n        setAudioElement(newAudio);\n      }\n    }).catch(error => console.error('Error fetching songs:', error));\n  }, [lang]);\n\n  // Play a selected song\n  const playSong = song => {\n    if (audioElement) audioElement.pause();\n    const newAudio = new Audio(`http://localhost:5000/public/${song.path}`);\n    newAudio.play();\n    setAudioElement(newAudio);\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n\n  // Toggle play/pause of the song\n  const togglePlayPause = () => {\n    if (audioElement) {\n      if (isPlaying) {\n        audioElement.pause();\n        setIsPlaying(false);\n      } else {\n        audioElement.play();\n        setIsPlaying(true);\n      }\n    }\n  };\n\n  // Toggle play/pause for individual song\n  const toggleSongPlayPause = song => {\n    if (audioElement && currentSong !== song) {\n      audioElement.pause();\n      setIsPlaying(false);\n      playSong(song);\n    } else if (audioElement && currentSong === song) {\n      if (isPlaying) {\n        audioElement.pause();\n        setIsPlaying(false);\n      } else {\n        audioElement.play();\n        setIsPlaying(true);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [lang.toUpperCase(), \" SONGS\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songItemContainer\",\n          children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"songItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:5000/public/${song.image}`,\n              alt: \"Album Cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"songName\",\n              children: [\"Song \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"songArtist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"songlistplay\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: [/*#__PURE__*/_jsxDEV(SongDuration, {\n                  path: song.path\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `far songItemPlay fa-${currentSong === song && isPlaying ? 'pause' : 'play'}-circle`,\n                  onClick: () => toggleSongPlayPause(song)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, song._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songBanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"range\",\n        id: \"myProgressBar\",\n        min: \"0\",\n        value: \"0\",\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-3x fa-step-backward\",\n          id: \"previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fas fa-3x fa-${isPlaying ? 'pause' : 'play'}-circle`,\n          id: \"masterPlay\",\n          onClick: togglePlayPause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-3x fa-step-forward\",\n          id: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/playing.gif\",\n          width: \"42px\",\n          alt: \"\",\n          id: \"gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"masterSongName\",\n          children: currentSong ? `Song ${songs.indexOf(currentSong) + 1}` : \"Song 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n// A new component to calculate the song's duration and display it\n_s(LanguagePage, \"WOcU/ceD/apLSx+Yb4E/Q+zCYIc=\", false, function () {\n  return [useParams];\n});\n_c = LanguagePage;\nconst SongDuration = ({\n  path\n}) => {\n  _s2();\n  const [duration, setDuration] = useState('00:00');\n\n  // Function to get the duration of a song using the Audio object\n  const getSongDuration = songPath => {\n    return new Promise(resolve => {\n      const audio = new Audio(`http://localhost:5000/public/${songPath}`);\n      audio.onloadedmetadata = () => {\n        const durationInSeconds = audio.duration;\n        const minutes = Math.floor(durationInSeconds / 60);\n        const seconds = Math.floor(durationInSeconds % 60);\n        const duration = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n        resolve(duration);\n      };\n    });\n  };\n  useEffect(() => {\n    getSongDuration(path).then(calculatedDuration => {\n      setDuration(calculatedDuration);\n    });\n  }, [path]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: duration\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 12\n  }, this);\n};\n_s2(SongDuration, \"X72k7+JADPRnJNqw+X/NXnzDOdQ=\");\n_c2 = SongDuration;\nexport default LanguagePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"LanguagePage\");\n$RefreshReg$(_c2, \"SongDuration\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","LanguagePage","_s","lang","songs","setSongs","currentSong","setCurrentSong","audioElement","setAudioElement","isPlaying","setIsPlaying","get","then","response","data","length","newAudio","Audio","path","catch","error","console","playSong","song","pause","play","togglePlayPause","toggleSongPlayPause","children","className","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","image","alt","SongDuration","onClick","_id","type","name","id","min","value","max","width","indexOf","_c","_s2","duration","setDuration","getSongDuration","songPath","Promise","resolve","audio","onloadedmetadata","durationInSeconds","minutes","Math","floor","seconds","calculatedDuration","_c2","$RefreshReg$"],"sources":["C:/Users/kshnk/KISHAN KUMAR/1KK_r/frontend/src/components/LanguagePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/style.css';\r\n\r\nconst LanguagePage = () => {\r\n    const { lang } = useParams();\r\n    const [songs, setSongs] = useState([]);\r\n    const [currentSong, setCurrentSong] = useState(null);\r\n    const [audioElement, setAudioElement] = useState(null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/songs?lang=${lang}`)\r\n            .then(response => {\r\n                setSongs(response.data);\r\n                if (response.data.length > 0) {\r\n                    setCurrentSong(response.data[0]);\r\n                    const newAudio = new Audio(`http://localhost:5000/public/${response.data[0].path}`);\r\n                    setAudioElement(newAudio);\r\n                }\r\n            })\r\n            .catch(error => console.error('Error fetching songs:', error));\r\n    }, [lang]);\r\n\r\n    // Play a selected song\r\n    const playSong = (song) => {\r\n        if (audioElement) audioElement.pause();\r\n        \r\n        const newAudio = new Audio(`http://localhost:5000/public/${song.path}`);\r\n        newAudio.play();\r\n        setAudioElement(newAudio);\r\n        setCurrentSong(song);\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    // Toggle play/pause of the song\r\n    const togglePlayPause = () => {\r\n        if (audioElement) {\r\n            if (isPlaying) {\r\n                audioElement.pause();\r\n                setIsPlaying(false);\r\n            } else {\r\n                audioElement.play();\r\n                setIsPlaying(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Toggle play/pause for individual song\r\n    const toggleSongPlayPause = (song) => {\r\n        if (audioElement && currentSong !== song) {\r\n            audioElement.pause();\r\n            setIsPlaying(false);\r\n            playSong(song);\r\n        } else if (audioElement && currentSong === song) {\r\n            if (isPlaying) {\r\n                audioElement.pause();\r\n                setIsPlaying(false);\r\n            } else {\r\n                audioElement.play();\r\n                setIsPlaying(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"songList\">\r\n                    <h1>{lang.toUpperCase()} SONGS</h1>\r\n                    <div className=\"songItemContainer\">\r\n                    {songs.map((song, index) => (\r\n                        <div className=\"songItem\" key={song._id}>\r\n                            <img src={`http://localhost:5000/public/${song.image}`} alt=\"Album Cover\" />\r\n                            <span className=\"songName\">Song {index + 1}</span> {/* Displaying Song 1, Song 2... */}\r\n                            <span className=\"songArtist\"></span>\r\n                            <span className=\"songlistplay\">\r\n                                <span className=\"timestamp\">\r\n                                    {/* Dynamically calculate and display song duration */}\r\n                                    <SongDuration path={song.path} />\r\n                                    <i className={`far songItemPlay fa-${currentSong === song && isPlaying ? 'pause' : 'play'}-circle`} \r\n                                    onClick={() => toggleSongPlayPause(song)}></i>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"songBanner\"></div>\r\n            </div>\r\n            <div className=\"bottom\">\r\n                <input type=\"range\" name=\"range\" id=\"myProgressBar\" min=\"0\" value=\"0\" max=\"100\" />\r\n                <div className=\"icons\">\r\n                    <i className=\"fas fa-3x fa-step-backward\" id=\"previous\"></i>\r\n                    <i className={`fas fa-3x fa-${isPlaying ? 'pause' : 'play'}-circle`} id=\"masterPlay\" onClick={togglePlayPause}></i>\r\n                    <i className=\"fas fa-3x fa-step-forward\" id=\"next\"></i>\r\n                </div>\r\n                <div className=\"songInfo\">\r\n                    <img src=\"/assets/playing.gif\" width=\"42px\" alt=\"\" id=\"gif\" />\r\n                    <span id=\"masterSongName\">{currentSong ? `Song ${songs.indexOf(currentSong) + 1}` : \"Song 1\"}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// A new component to calculate the song's duration and display it\r\nconst SongDuration = ({ path }) => {\r\n    const [duration, setDuration] = useState('00:00');\r\n\r\n    // Function to get the duration of a song using the Audio object\r\n    const getSongDuration = (songPath) => {\r\n        return new Promise((resolve) => {\r\n            const audio = new Audio(`http://localhost:5000/public/${songPath}`);\r\n            audio.onloadedmetadata = () => {\r\n                const durationInSeconds = audio.duration;\r\n                const minutes = Math.floor(durationInSeconds / 60);\r\n                const seconds = Math.floor(durationInSeconds % 60);\r\n                const duration = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n                resolve(duration);\r\n            };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getSongDuration(path).then((calculatedDuration) => {\r\n            setDuration(calculatedDuration);\r\n        });\r\n    }, [path]);\r\n\r\n    return <span>{duration}</span>;\r\n};\r\n\r\nexport default LanguagePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}