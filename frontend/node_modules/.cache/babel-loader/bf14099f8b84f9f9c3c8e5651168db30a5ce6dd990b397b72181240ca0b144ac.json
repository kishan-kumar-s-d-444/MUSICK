{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kshnk\\\\KISHAN KUMAR\\\\1KK_r\\\\frontend\\\\src\\\\components\\\\LanguagePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguagePage = () => {\n  _s();\n  const {\n    lang\n  } = useParams();\n  const [songs, setSongs] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [audioElement, setAudioElement] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/songs?lang=${lang}`).then(response => {\n      setSongs(response.data);\n      if (response.data.length > 0) {\n        setCurrentSong(response.data[0]);\n        setAudioElement(new Audio(response.data[0].path));\n      }\n    }).catch(error => console.error('Error fetching songs:', error));\n  }, [lang]);\n  useEffect(() => {\n    if (audioElement) {\n      audioElement.addEventListener('timeupdate', () => {\n        const progress = audioElement.currentTime / audioElement.duration * 100;\n        document.getElementById('myProgressBar').value = progress;\n      });\n    }\n  }, [audioElement]);\n  const playSong = song => {\n    if (audioElement) audioElement.pause();\n    const newAudio = new Audio(song.path);\n    setAudioElement(newAudio);\n    setCurrentSong(song);\n    newAudio.play();\n    setIsPlaying(true);\n  };\n  const togglePlayPause = () => {\n    if (audioElement) {\n      if (isPlaying) {\n        audioElement.pause();\n        setIsPlaying(false);\n      } else {\n        audioElement.play();\n        setIsPlaying(true);\n      }\n    }\n  };\n  const nextSong = () => {\n    const currentIndex = songs.indexOf(currentSong);\n    const nextIndex = (currentIndex + 1) % songs.length;\n    playSong(songs[nextIndex]);\n  };\n  const previousSong = () => {\n    const currentIndex = songs.indexOf(currentSong);\n    const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\n    playSong(songs[prevIndex]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [lang.toUpperCase(), \" SONGS\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"songItemContainer\",\n          children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"songItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: song.image,\n              alt: \"Album Cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"songName\",\n              children: song.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"songArtist\",\n              children: song.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"songlistplay\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: [song.duration, /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: `far songItemPlay fa-${currentSong === song && isPlaying ? 'pause' : 'play'}-circle`,\n                  onClick: () => playSong(song)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        name: \"range\",\n        id: \"myProgressBar\",\n        min: \"0\",\n        value: \"0\",\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-3x fa-step-backward\",\n          id: \"previous\",\n          onClick: previousSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fas fa-3x fa-${isPlaying ? 'pause' : 'play'}-circle`,\n          id: \"masterPlay\",\n          onClick: togglePlayPause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-3x fa-step-forward\",\n          id: \"next\",\n          onClick: nextSong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/assets/playing.gif\",\n          width: \"42px\",\n          alt: \"\",\n          id: \"gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"masterSongName\",\n          children: currentSong ? currentSong.name : \"Song1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguagePage, \"vRERBvKtRSlaYcfsRGA4Jy+azjQ=\", false, function () {\n  return [useParams];\n});\n_c = LanguagePage;\nexport default LanguagePage;\nvar _c;\n$RefreshReg$(_c, \"LanguagePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","LanguagePage","_s","lang","songs","setSongs","currentSong","setCurrentSong","audioElement","setAudioElement","isPlaying","setIsPlaying","get","then","response","data","length","Audio","path","catch","error","console","addEventListener","progress","currentTime","duration","document","getElementById","value","playSong","song","pause","newAudio","play","togglePlayPause","nextSong","currentIndex","indexOf","nextIndex","previousSong","prevIndex","children","className","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","image","alt","name","artist","onClick","type","id","min","max","width","_c","$RefreshReg$"],"sources":["C:/Users/kshnk/KISHAN KUMAR/1KK_r/frontend/src/components/LanguagePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/style.css';\r\n\r\nconst LanguagePage = () => {\r\n    const { lang } = useParams();\r\n    const [songs, setSongs] = useState([]);\r\n    const [currentSong, setCurrentSong] = useState(null);\r\n    const [audioElement, setAudioElement] = useState(null);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/songs?lang=${lang}`)\r\n            .then(response => {\r\n                setSongs(response.data);\r\n                if (response.data.length > 0) {\r\n                    setCurrentSong(response.data[0]);\r\n                    setAudioElement(new Audio(response.data[0].path));\r\n                }\r\n            })\r\n            .catch(error => console.error('Error fetching songs:', error));\r\n    }, [lang]);\r\n\r\n    useEffect(() => {\r\n        if (audioElement) {\r\n            audioElement.addEventListener('timeupdate', () => {\r\n                const progress = (audioElement.currentTime / audioElement.duration) * 100;\r\n                document.getElementById('myProgressBar').value = progress;\r\n            });\r\n        }\r\n    }, [audioElement]);\r\n\r\n    const playSong = (song) => {\r\n        if (audioElement) audioElement.pause();\r\n        const newAudio = new Audio(song.path);\r\n        setAudioElement(newAudio);\r\n        setCurrentSong(song);\r\n        newAudio.play();\r\n        setIsPlaying(true);\r\n    };\r\n\r\n    const togglePlayPause = () => {\r\n        if (audioElement) {\r\n            if (isPlaying) {\r\n                audioElement.pause();\r\n                setIsPlaying(false);\r\n            } else {\r\n                audioElement.play();\r\n                setIsPlaying(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    const nextSong = () => {\r\n        const currentIndex = songs.indexOf(currentSong);\r\n        const nextIndex = (currentIndex + 1) % songs.length;\r\n        playSong(songs[nextIndex]);\r\n    };\r\n\r\n    const previousSong = () => {\r\n        const currentIndex = songs.indexOf(currentSong);\r\n        const prevIndex = (currentIndex - 1 + songs.length) % songs.length;\r\n        playSong(songs[prevIndex]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"songList\">\r\n                    <h1>{lang.toUpperCase()} SONGS</h1>\r\n                    <div className=\"songItemContainer\">\r\n                        {songs.map((song, index) => (\r\n                            <div className=\"songItem\" key={index}>\r\n                                <img src={song.image} alt=\"Album Cover\" />\r\n                                <span className=\"songName\">{song.name}</span>\r\n                                <span className=\"songArtist\">{song.artist}</span>\r\n                                <span className=\"songlistplay\">\r\n                                    <span className=\"timestamp\">{song.duration} \r\n                                        <i className={`far songItemPlay fa-${currentSong === song && isPlaying ? 'pause' : 'play'}-circle`} \r\n                                           onClick={() => playSong(song)}></i>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"bottom\">\r\n                <input type=\"range\" name=\"range\" id=\"myProgressBar\" min=\"0\" value=\"0\" max=\"100\" />\r\n                <div className=\"icons\">\r\n                    <i className=\"fas fa-3x fa-step-backward\" id=\"previous\" onClick={previousSong}></i>\r\n                    <i className={`fas fa-3x fa-${isPlaying ? 'pause' : 'play'}-circle`} id=\"masterPlay\" onClick={togglePlayPause}></i>\r\n                    <i className=\"fas fa-3x fa-step-forward\" id=\"next\" onClick={nextSong}></i>\r\n                </div>\r\n                <div className=\"songInfo\">\r\n                    <img src=\"/assets/playing.gif\" width=\"42px\" alt=\"\" id=\"gif\" />\r\n                    <span id=\"masterSongName\">{currentSong ? currentSong.name : \"Song1\"}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LanguagePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACZG,KAAK,CAACc,GAAG,CAAC,oCAAoCT,IAAI,EAAE,CAAC,CAChDU,IAAI,CAACC,QAAQ,IAAI;MACdT,QAAQ,CAACS,QAAQ,CAACC,IAAI,CAAC;MACvB,IAAID,QAAQ,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC1BT,cAAc,CAACO,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChCN,eAAe,CAAC,IAAIQ,KAAK,CAACH,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC;MACrD;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,CAACjB,IAAI,CAAC,CAAC;EAEVR,SAAS,CAAC,MAAM;IACZ,IAAIa,YAAY,EAAE;MACdA,YAAY,CAACc,gBAAgB,CAAC,YAAY,EAAE,MAAM;QAC9C,MAAMC,QAAQ,GAAIf,YAAY,CAACgB,WAAW,GAAGhB,YAAY,CAACiB,QAAQ,GAAI,GAAG;QACzEC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACC,KAAK,GAAGL,QAAQ;MAC7D,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACf,YAAY,CAAC,CAAC;EAElB,MAAMqB,QAAQ,GAAIC,IAAI,IAAK;IACvB,IAAItB,YAAY,EAAEA,YAAY,CAACuB,KAAK,CAAC,CAAC;IACtC,MAAMC,QAAQ,GAAG,IAAIf,KAAK,CAACa,IAAI,CAACZ,IAAI,CAAC;IACrCT,eAAe,CAACuB,QAAQ,CAAC;IACzBzB,cAAc,CAACuB,IAAI,CAAC;IACpBE,QAAQ,CAACC,IAAI,CAAC,CAAC;IACftB,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMuB,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAI1B,YAAY,EAAE;MACd,IAAIE,SAAS,EAAE;QACXF,YAAY,CAACuB,KAAK,CAAC,CAAC;QACpBpB,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,MAAM;QACHH,YAAY,CAACyB,IAAI,CAAC,CAAC;QACnBtB,YAAY,CAAC,IAAI,CAAC;MACtB;IACJ;EACJ,CAAC;EAED,MAAMwB,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,YAAY,GAAGhC,KAAK,CAACiC,OAAO,CAAC/B,WAAW,CAAC;IAC/C,MAAMgC,SAAS,GAAG,CAACF,YAAY,GAAG,CAAC,IAAIhC,KAAK,CAACY,MAAM;IACnDa,QAAQ,CAACzB,KAAK,CAACkC,SAAS,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMH,YAAY,GAAGhC,KAAK,CAACiC,OAAO,CAAC/B,WAAW,CAAC;IAC/C,MAAMkC,SAAS,GAAG,CAACJ,YAAY,GAAG,CAAC,GAAGhC,KAAK,CAACY,MAAM,IAAIZ,KAAK,CAACY,MAAM;IAClEa,QAAQ,CAACzB,KAAK,CAACoC,SAAS,CAAC,CAAC;EAC9B,CAAC;EAED,oBACIxC,OAAA;IAAAyC,QAAA,gBACIzC,OAAA;MAAK0C,SAAS,EAAC,WAAW;MAAAD,QAAA,eACtBzC,OAAA;QAAK0C,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACrBzC,OAAA;UAAAyC,QAAA,GAAKtC,IAAI,CAACwC,WAAW,CAAC,CAAC,EAAC,QAAM;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnC/C,OAAA;UAAK0C,SAAS,EAAC,mBAAmB;UAAAD,QAAA,EAC7BrC,KAAK,CAAC4C,GAAG,CAAC,CAAClB,IAAI,EAAEmB,KAAK,kBACnBjD,OAAA;YAAK0C,SAAS,EAAC,UAAU;YAAAD,QAAA,gBACrBzC,OAAA;cAAKkD,GAAG,EAAEpB,IAAI,CAACqB,KAAM;cAACC,GAAG,EAAC;YAAa;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC1C/C,OAAA;cAAM0C,SAAS,EAAC,UAAU;cAAAD,QAAA,EAAEX,IAAI,CAACuB;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7C/C,OAAA;cAAM0C,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAEX,IAAI,CAACwB;YAAM;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjD/C,OAAA;cAAM0C,SAAS,EAAC,cAAc;cAAAD,QAAA,eAC1BzC,OAAA;gBAAM0C,SAAS,EAAC,WAAW;gBAAAD,QAAA,GAAEX,IAAI,CAACL,QAAQ,eACtCzB,OAAA;kBAAG0C,SAAS,EAAE,uBAAuBpC,WAAW,KAAKwB,IAAI,IAAIpB,SAAS,GAAG,OAAO,GAAG,MAAM,SAAU;kBAChG6C,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAACC,IAAI;gBAAE;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA,GAToBE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAU/B,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN/C,OAAA;MAAK0C,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBzC,OAAA;QAAOwD,IAAI,EAAC,OAAO;QAACH,IAAI,EAAC,OAAO;QAACI,EAAE,EAAC,eAAe;QAACC,GAAG,EAAC,GAAG;QAAC9B,KAAK,EAAC,GAAG;QAAC+B,GAAG,EAAC;MAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClF/C,OAAA;QAAK0C,SAAS,EAAC,OAAO;QAAAD,QAAA,gBAClBzC,OAAA;UAAG0C,SAAS,EAAC,4BAA4B;UAACe,EAAE,EAAC,UAAU;UAACF,OAAO,EAAEhB;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnF/C,OAAA;UAAG0C,SAAS,EAAE,gBAAgBhC,SAAS,GAAG,OAAO,GAAG,MAAM,SAAU;UAAC+C,EAAE,EAAC,YAAY;UAACF,OAAO,EAAErB;QAAgB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnH/C,OAAA;UAAG0C,SAAS,EAAC,2BAA2B;UAACe,EAAE,EAAC,MAAM;UAACF,OAAO,EAAEpB;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACN/C,OAAA;QAAK0C,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACrBzC,OAAA;UAAKkD,GAAG,EAAC,qBAAqB;UAACU,KAAK,EAAC,MAAM;UAACR,GAAG,EAAC,EAAE;UAACK,EAAE,EAAC;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9D/C,OAAA;UAAMyD,EAAE,EAAC,gBAAgB;UAAAhB,QAAA,EAAEnC,WAAW,GAAGA,WAAW,CAAC+C,IAAI,GAAG;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC7C,EAAA,CAjGID,YAAY;EAAA,QACGJ,SAAS;AAAA;AAAAgE,EAAA,GADxB5D,YAAY;AAmGlB,eAAeA,YAAY;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}